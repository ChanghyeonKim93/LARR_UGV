1. Get realsense SDK
link : www.intelrealsense.com/sdk-2/
link for Linux : https://github.com/IntelRealSense/librealsense/blob/master/doc/distribution_linux.md

* please install '*-dkms, *-utils, *-dev, *-dbg'

1-1) Register the server's public key:
$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE

1-2) Add the server to the list of repositories:
$ sudo add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u

1-3) Install the libraries (see section below if upgrading packages):
$ sudo apt-get install librealsense2-dkms
$ sudo apt-get install librealsense2-utils
$ sudo apt-get install librealsense2-dev
$ sudo apt-get install librealsense2-dbg


2. Install ROS realsense camera
2-1) install ros realsense2 camera 
$ export ROS_VER=melodic
$ sudo apt-get install ros-melodic-realsense2-camera

2-2) Download and build the Intel realsense ROS nodes
$ cd ~/catkin_ws/src
$ git clone https://github.com/IntelRealSense/realsense-ros.git
$ cd realsense-ros/
$ git checkout `git tag | sort -V | grep -P "^2.\d+\.\d+" | tail -1`

2-3) Source the setup.bash  
$ echo "source ~/catkin_ws/devel/setup.bash" >> ~/.bashrc
$ source ~/.bashrc


3. Copy the test launch file (just for testing both D435i working well.)
$ cd ~/catkin_ws/src/LARR_UGV/external/rgbd
$ cp -r larr_ugv_cameras.launch /~catkin_ws/src/realsense_ros/realsense2_camera/launch

